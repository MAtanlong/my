<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.permission.user.mapper.UserMapper">
    
    <!-- 用户DTO结果映射 -->
    <resultMap id="UserDTOMap" type="com.permission.user.dto.UserDTO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="real_name" property="realName"/>
        <result column="avatar" property="avatar"/>
        <result column="status" property="status"/>
        <result column="department_id" property="departmentId"/>
        <result column="department_name" property="departmentName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    
    <!-- 分页查询用户列表 -->
    <select id="selectUserPage" resultMap="UserDTOMap">
        SELECT 
            u.id,
            u.username,
            u.email,
            u.phone,
            u.real_name,
            u.avatar,
            u.status,
            u.department_id,
            d.dept_name as department_name,
            u.created_at,
            u.updated_at
        FROM sys_user u
        LEFT JOIN sys_department d ON u.department_id = d.id
        <where>
            <if test="query.keyword != null and query.keyword != ''">
                AND (
                    u.username LIKE CONCAT('%', #{query.keyword}, '%')
                    OR u.real_name LIKE CONCAT('%', #{query.keyword}, '%')
                    OR u.email LIKE CONCAT('%', #{query.keyword}, '%')
                )
            </if>
            <if test="query.status != null and query.status != ''">
                AND u.status = #{query.status}
            </if>
            <if test="query.departmentId != null and query.departmentId != ''">
                AND u.department_id = #{query.departmentId}
            </if>
            <if test="query.roleId != null and query.roleId != ''">
                AND EXISTS (
                    SELECT 1 FROM sys_user_role ur 
                    WHERE ur.user_id = u.id AND ur.role_id = #{query.roleId}
                )
            </if>
        </where>
        ORDER BY u.created_at DESC
    </select>
    
    <!-- 根据用户ID查询用户详情 -->
    <select id="selectUserById" resultMap="UserDTOMap">
        SELECT 
            u.id,
            u.username,
            u.email,
            u.phone,
            u.real_name,
            u.avatar,
            u.status,
            u.department_id,
            d.dept_name as department_name,
            u.created_at,
            u.updated_at
        FROM sys_user u
        LEFT JOIN sys_department d ON u.department_id = d.id
        WHERE u.id = #{userId}
    </select>
    
    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultType="com.permission.user.entity.User">
        SELECT * FROM sys_user WHERE username = #{username}
    </select>
    
    <!-- 根据邮箱查询用户 -->
    <select id="selectByEmail" resultType="com.permission.user.entity.User">
        SELECT * FROM sys_user WHERE email = #{email}
    </select>
    
    <!-- 根据部门ID查询用户列表 -->
    <select id="selectUsersByDepartmentId" resultMap="UserDTOMap">
        SELECT 
            u.id,
            u.username,
            u.email,
            u.phone,
            u.real_name,
            u.avatar,
            u.status,
            u.department_id,
            d.dept_name as department_name,
            u.created_at,
            u.updated_at
        FROM sys_user u
        LEFT JOIN sys_department d ON u.department_id = d.id
        WHERE u.department_id = #{departmentId}
        ORDER BY u.created_at DESC
    </select>
    
    <!-- 根据角色ID查询用户列表 -->
    <select id="selectUsersByRoleId" resultMap="UserDTOMap">
        SELECT 
            u.id,
            u.username,
            u.email,
            u.phone,
            u.real_name,
            u.avatar,
            u.status,
            u.department_id,
            d.dept_name as department_name,
            u.created_at,
            u.updated_at
        FROM sys_user u
        LEFT JOIN sys_department d ON u.department_id = d.id
        INNER JOIN sys_user_role ur ON u.id = ur.user_id
        WHERE ur.role_id = #{roleId}
        ORDER BY u.created_at DESC
    </select>
    
</mapper>